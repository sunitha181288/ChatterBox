{
  "name": "gyp",
  "version": "0.5.0",
  "description": "A gyp file reader / processor",
  "main": "index.js",
  "scripts": {
    "test": "tap test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aredridel/gyp.git"
  },
  "author": {
    "name": "Aria Stewart",
    "email": "aredridel@nbtsc.org"
  },
  "license": "BSD",
  "dependencies": {
    "gyp-merge": "~0.2.0",
    "gyp-expansions": "~0.0.0",
    "gyp-conditions": "0.0.4",
    "gyp-load": "~0.5.0"
  },
  "devDependencies": {
    "tap": "~0.4.2"
  },
  "readme": "gyp\n===\n\nThis package is incomplete, but the goal of this package is first to become a\ncomplete GYP reader, then perhaps implement some generators.\n\nUsage\n-----\n\n    var gyp = require('gyp');\n    gyp('test.gyp', {}, function(err, data) {\n        // data is a plain object with gyp pre-phase variables expanded\n        // and include files processed\n    });\n\nStill to do\n-----------\n\n* Handle the non-JSON parsing parts like comments\n* Add a simple hook for post-phase variable expansions and handle build-specific use cases\n\nBlue Sky\n--------\n\nI'd love to use gyp files in a devops platform as the recipe file format. It's\nthe right combination of structured and restrictive, and the include-loading\nsemantics are about right to give good modularity.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/aredridel/gyp/issues"
  },
  "_id": "gyp@0.5.0",
  "dist": {
    "shasum": "4865a4564e5f4b7beff38cb52b8a8a36337456f4",
    "tarball": "http://registry.npmjs.org/gyp/-/gyp-0.5.0.tgz"
  },
  "_from": "gyp@*",
  "_npmVersion": "1.2.32",
  "_npmUser": {
    "name": "aredridel",
    "email": "aredridel@nbtsc.org"
  },
  "maintainers": [
    {
      "name": "aredridel",
      "email": "aredridel@nbtsc.org"
    }
  ],
  "directories": {},
  "_shasum": "4865a4564e5f4b7beff38cb52b8a8a36337456f4",
  "_resolved": "https://registry.npmjs.org/gyp/-/gyp-0.5.0.tgz",
  "homepage": "https://github.com/aredridel/gyp#readme"
}
